
.. _everest_modules_API:

###
API
###
| The EVerest API module, exposing some internal functionality on an external MQTT connection.



********************
Module Configuration
********************
| **charger_information_file**:*string* <optional>
| *default: ""*
|  Path to a file containing information about the charger like its serial number
| **powermeter_energy_import_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for import energy in the power meter
| **powermeter_energy_export_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for export energy in the power meter
| **powermeter_power_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for power in the power meter
| **powermeter_voltage_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for voltage in the power meter
| **powermeter_VAR_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for VAR in the power meter
| **powermeter_current_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for current in the power meter
| **powermeter_frequency_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for frequency in the power meter
| **hw_caps_max_current_export_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for maximum export current in the hardware capabilities
| **hw_caps_max_current_import_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for maximum import current in the hardware capabilities
| **hw_caps_min_current_export_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for minimum export current in the hardware capabilities
| **hw_caps_min_current_import_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for minimum import current in the hardware capabilities
| **hw_caps_max_plug_temperature_C_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for max_plug_temperature_C in the hardware capabilities
| **limits_max_current_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for maximum current in the limits
| **telemetry_evse_temperature_C_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for evse_temperature_C in telemetry
| **telemetry_fan_rpm_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for fan RPM in telemetry
| **telemetry_supply_voltage_12V_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for supply voltage 12V in telemetry
| **telemetry_supply_voltage_minus_12V_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for supply voltage -12V in telemetry
| **telemetry_plug_temperature_C_decimal_places**:*integer* <optional>
| *default: 2*
|  Maximum number of decimal places for RCD current in telemetry
| **powermeter_energy_import_round_to**:*number* <optional>
| *default: 0*
|  Round import energy to the nearest step. Ignored if value is 0
| **powermeter_energy_export_round_to**:*number* <optional>
| *default: 0*
|  Round export energy to the nearest step. Ignored if value is 0
| **powermeter_power_round_to**:*number* <optional>
| *default: 0*
|  Round power to the nearest step. Ignored if value is 0
| **powermeter_voltage_round_to**:*number* <optional>
| *default: 0*
|  Round voltage to the nearest step. Ignored if value is 0
| **powermeter_VAR_round_to**:*number* <optional>
| *default: 0*
|  Round VAR to the nearest step. Ignored if value is 0
| **powermeter_current_round_to**:*number* <optional>
| *default: 0*
|  Round current to the nearest step. Ignored if value is 0
| **powermeter_frequency_round_to**:*number* <optional>
| *default: 0*
|  Round frequency to the nearest step. Ignored if value is 0
| **hw_caps_max_current_export_round_to**:*number* <optional>
| *default: 0*
|  Round maximum export current in hardware limits to the nearest step. Ignored if value is 0
| **hw_caps_max_current_import_round_to**:*number* <optional>
| *default: 0*
|  Round maximum import current in hardware limits to the nearest step. Ignored if value is 0
| **hw_caps_min_current_export_round_to**:*number* <optional>
| *default: 0*
|  Round minimum export current in hardware limits to the nearest step. Ignored if value is 0
| **hw_caps_min_current_import_round_to**:*number* <optional>
| *default: 0*
|  Round minimum import current in hardware limits to the nearest step. Ignored if value is 0
| **hw_caps_max_plug_temperature_C_round_to**:*number* <optional>
| *default: 0*
|  Round max_plug_temperature_C in hardware limits to the nearest step. Ignored if value is 0
| **limits_max_current_round_to**:*number* <optional>
| *default: 0*
|  Round maximum current in limits to the nearest step. Ignored if value is 0
| **telemetry_evse_temperature_C_round_to**:*number* <optional>
| *default: 0*
|  Round evse_temperature_C in telemetry to the nearest step. Ignored if value is 0
| **telemetry_fan_rpm_round_to**:*number* <optional>
| *default: 0*
|  Round fan RPM in telemetry to the nearest step. Ignored if value is 0
| **telemetry_supply_voltage_12V_round_to**:*number* <optional>
| *default: 0*
|  Round supply voltage 12V in telemetry to the nearest step. Ignored if value is 0
| **telemetry_supply_voltage_minus_12V_round_to**:*number* <optional>
| *default: 0*
|  Round supply voltage -12V in telemetry to the nearest step. Ignored if value is 0
| **telemetry_plug_temperature_C_round_to**:*number* <optional>
| *default: 0*
|  Round plug_temperature_C in telemetry to the nearest step. Ignored if value is 0

********
Provides
********
| **main**::ref:`empty <everest_interfaces_empty>`
|  EVerest API

************
Requirements
************
| **evse_manager**::ref:`evse_manager <everest_interfaces_evse_manager>` 1..128
| **ocpp**::ref:`ocpp <everest_interfaces_ocpp>` 0..1
| **random_delay**::ref:`uk_random_delay <everest_interfaces_uk_random_delay>` 0..128
| **error_history**::ref:`error_history <everest_interfaces_error_history>` 0..1

********
Metadata
********
Authors
=======
| Kai-Uwe Hermann

License
=======
| https://opensource.org/licenses/Apache-2.0

