
.. _everest_types_evse_security:


#############
evse_security
#############

Types for evse security

.. _evse_security-EncodingFormat:

| **EncodingFormat**:*string*
|  Enum specifies the encoding of certificates or keys
|  enum: DER, PEM

.. _evse_security-CaCertificateType:

| **CaCertificateType**:*string*
|  Enum specifies the type of a CA certificate
|  enum: V2G, MO, CSMS, MF

.. _evse_security-LeafCertificateType:

| **LeafCertificateType**:*string*
|  Enum specifies the type of a leaf certificate
|  enum: CSMS, V2G, MF

.. _evse_security-CertificateType:

| **CertificateType**:*string*
|  Enum specifies certificate type of leaf and CA certificates
|  enum: V2GRootCertificate, MORootCertificate, CSMSRootCertificate, V2GCertificateChain, MFRootCertificate

.. _evse_security-HashAlgorithm:

| **HashAlgorithm**:*string*
|  Enum specifies a hash algorithm
|  enum: SHA256, SHA384, SHA512

.. _evse_security-InstallCertificateResult:

| **InstallCertificateResult**:*string*
|  Result of the attempt to install a certificate
|  enum: InvalidSignature, InvalidCertificateChain, InvalidFormat, InvalidCommonName, NoRootCertificateInstalled, Expired, CertificateStoreMaxLengthExceeded, WriteError, Accepted

.. _evse_security-DeleteCertificateResult:

| **DeleteCertificateResult**:*string*
|  Result of the attempt to delete a certificate
|  enum: Accepted, Failed, NotFound

.. _evse_security-GetInstalledCertificatesStatus:

| **GetInstalledCertificatesStatus**:*string*
|  Status indicates the result of the attempt to retrieve certificates
|  enum: Accepted, NotFound

.. _evse_security-GetKeyPairStatus:

| **GetKeyPairStatus**:*string*
|  Status indicates the result of the attempt to retrieve a a keypair
|  enum: Accepted, Rejected, NotFound, NotFoundValid, PrivateKeyNotFound

.. _evse_security-CertificateHashData:

| **CertificateHashData**:*object*
|  Type specifies the hash data of a certificate
|  required: hash_algorithm, issuer_name_hash, issuer_key_hash, serial_number
|  properties:
|   **hash_algorithm**:*string* (:ref:`evse_security-HashAlgorithm <evse_security-HashAlgorithm>`)
|    Algorithm used for the hashes provided
|    **There is an extended definition for this object** :ref:`here <evse_security-HashAlgorithm>`.
|   **issuer_name_hash**:*string*
|    The hash of the issuer's distinguished name (DN), calculated over the DER encoding of the issuer's name field.
|   **issuer_key_hash**:*string*
|    The hash of the DER encoded public key: the value (excluding tag and length) of the  subject public key field
|   **serial_number**:*string*
|    The string representation of the hexadecimal value of the serial number without the prefix "0x" and without leading zeroes.

.. _evse_security-CertificateHashDataChain:

| **CertificateHashDataChain**:*object*
|  Type specifies the hash data chain of a certificate
|  required: certificate_type, certificate_hash_data
|  properties:
|   **certificate_type**:*string* (:ref:`evse_security-CertificateType <evse_security-CertificateType>`)
|    Indicates the type of the certificate for which the hash data is provided
|    **There is an extended definition for this object** :ref:`here <evse_security-CertificateType>`.
|   **certificate_hash_data**:*object* (:ref:`evse_security-CertificateHashData <evse_security-CertificateHashData>`)
|    Contains the hash data of the certificate
|    **There is an extended definition for this object** :ref:`here <evse_security-CertificateHashData>`.
|   **child_certificate_hash_data**:*array*
|    Contains the hash data of the child's certificates
|    items:
|     type:
|     $ref:

.. _evse_security-GetInstalledCertificatesResult:

| **GetInstalledCertificatesResult**:*object*
|  Result to a request to retrieve certificates
|  required: status, certificate_hash_data_chain
|  properties:
|   **status**:*string* (:ref:`evse_security-GetInstalledCertificatesStatus <evse_security-GetInstalledCertificatesStatus>`)
|    Indicates the status of the request
|    **There is an extended definition for this object** :ref:`here <evse_security-GetInstalledCertificatesStatus>`.
|   **certificate_hash_data_chain**:*array*
|    the hashed certificate data for each requested certificates
|    items:
|     type:
|     $ref:

.. _evse_security-OCSPRequestData:

| **OCSPRequestData**:*object*
|  Type that specifies OCSP data
|  properties:
|   **certificate_hash_data**:*object* (:ref:`evse_security-CertificateHashData <evse_security-CertificateHashData>`)
|    Contains the hash data of the certificate
|    **There is an extended definition for this object** :ref:`here <evse_security-CertificateHashData>`.
|   **responder_url**:*string*
|    Contains the responder URL

.. _evse_security-OCSPRequestDataList:

| **OCSPRequestDataList**:*object*
|  List of OCSP Request data
|  required: ocsp_request_data_list
|  properties:
|   **ocsp_request_data_list**:*array*
|    A list of OCSP request data
|    items:
|     type:
|     $ref:

.. _evse_security-KeyPair:

| **KeyPair**:*object*
|  Type that specifies the paths of a certificate and the respective private key
|  required: key, certificate, certificate_single
|  properties:
|   **key**:*string*
|    The path of the PEM or DER encoded private key
|   **certificate**:*string*
|    The path of the PEM or DER encoded certificate chain
|   **certificate_single**:*string*
|    The path of the PEM or DER encoded single certificate
|   **password**:*string*
|    Specifies the password for the private key if encrypted

.. _evse_security-GetKeyPairResult:

| **GetKeyPairResult**:*object*
|  Response to the command get_key_pair
|  required: status
|  properties:
|   **status**:*string* (:ref:`evse_security-GetKeyPairStatus <evse_security-GetKeyPairStatus>`)
|    The status of the requested command
|    **There is an extended definition for this object** :ref:`here <evse_security-GetKeyPairStatus>`.
|   **key_pair**:*object* (:ref:`evse_security-KeyPair <evse_security-KeyPair>`)
|    The requested key pair
|    **There is an extended definition for this object** :ref:`here <evse_security-KeyPair>`.
