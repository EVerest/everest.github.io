
.. _everest_types_evse_manager:


############
evse_manager
############

EVSE manager types

.. _evse_manager-SessionCancellationReason:

| **SessionCancellationReason**:*string*
|  Reason for session cancellation
|  enum: EmergencyStop, EVDisconnected, HardReset, Local, Other, PowerLoss, Reboot, Remote, SoftReset, UnlockCommand, DeAuthorized

.. _evse_manager-ReservationResult:

| **ReservationResult**:*string*
|  Result of an attempted reservation
|  enum: Accepted, Faulted, Occupied, Rejected, Unavailable

.. _evse_manager-SetLocalMaxCurrentResult:

| **SetLocalMaxCurrentResult**:*string*
|  Returns success or error code
|  enum: Success, Error_OutOfRange, Error_Hardware

.. _evse_manager-SwitchThreePhasesWhileChargingResult:

| **SwitchThreePhasesWhileChargingResult**:*string*
|  Returns success or error code
|  enum: Success, Error_NotSupported, Error_NotCharging, Error_Hardware

.. _evse_manager-SessionEvent:

| **SessionEvent**:*string*
|  Event enum
|  enum: Enabled, Disabled, SessionStarted, AuthRequired, ChargingStarted, ChargingPausedEV, ChargingPausedEVSE, ChargingResumed, SessionFinished, SessionCancelled, Error, PermanentFault, ReservationStart, ReservationEnd, ReservationAuthtokenMismatch, ReplugStarted, ReplugFinished

.. _evse_manager-SessionStarted:

| **SessionStarted**:*object*
|  data for SessionStarted event
|  required: timestamp, energy_Wh_import
|  properties:
|   **timestamp**:*number*
|    Session start timestamp
|   **energy_Wh_import**:*number*
|    Session start Wh
|   **energy_Wh_export**:*number*
|    Session start Wh
|   **signed_meter_value**:*string*
|    Signed meter value
|   **reservation_id**:*number*
|    Reservation Id

.. _evse_manager-SessionFinished:

| **SessionFinished**:*object*
|  data for SessionFinished event that happens when car is plugged out
|  required: timestamp, energy_Wh_import
|  properties:
|   **timestamp**:*number*
|    Session end timestamp
|   **energy_Wh_import**:*number*
|    Session end Wh
|   **energy_Wh_export**:*number*
|    Session end Wh
|   **signed_meter_value**:*string*
|    Signed meter value

.. _evse_manager-SessionCancelled:

| **SessionCancelled**:*object*
|  data for SessionCancelled event that happens when e.g. user cancels charging before plug out. Note that SessionFinished will always be generated on plugout.
|  required: timestamp, energy_Wh_import
|  properties:
|   **timestamp**:*number*
|    Session cancel timestamp
|   **energy_Wh_import**:*number*
|    Session cancel Wh
|   **energy_Wh_export**:*number*
|    Session cancel Wh
|   **signed_meter_value**:*string*
|    Signed meter value
|   **reason**:*string* (:ref:`evse_manager-SessionCancellationReason <evse_manager-SessionCancellationReason>`)
|    Reason for session cancellation
|    **There is an extended definition for this object** :ref:`here <evse_manager-SessionCancellationReason>`.

.. _evse_manager-Error:

| **Error**:*string*
|  Details on error type
|  enum: Car, CarDiodeFault, Relais, RCD, VentilationNotAvailable, OverCurrent, Internal, SLAC, HLC

.. _evse_manager-ReservationStart:

| **ReservationStart**:*object*
|  Details on Reservation Start
|  required: reservation_id, id_tag
|  properties:
|   **reservation_id**:*integer*
|    reservation_id
|   **id_tag**:*string*
|    id tag of the reservation
|   **parent_id**:*string*
|    parent_id

.. _evse_manager-ReservationEndReason:

| **ReservationEndReason**:*string*
|  Reason why reservation ends
|  enum: Expired, Cancelled, UsedToStartCharging

.. _evse_manager-ReservationEnd:

| **ReservationEnd**:*object*
|  Details on Reservation End
|  required: reason, reservation_id
|  properties:
|   **reason**:*string* (:ref:`evse_manager-ReservationEndReason <evse_manager-ReservationEndReason>`)
|    Reason why reservation ends
|    **There is an extended definition for this object** :ref:`here <evse_manager-ReservationEndReason>`.
|   **reservation_id**:*integer*
|    reservation_id

.. _evse_manager-SessionEvents:

| **SessionEvents**:*object*
|  Emits all events related to sessions
|  required: uuid, event
|  properties:
|   **uuid**:*string*
|    An EVSE generated UUID for this session, can be used e.g. for database storage.
|   **event**:*string* (:ref:`evse_manager-SessionEvent <evse_manager-SessionEvent>`)
|    Event enum. For some events an additional object is set, see below.
|    **There is an extended definition for this object** :ref:`here <evse_manager-SessionEvent>`.
|   **session_started**:*object* (:ref:`evse_manager-SessionStarted <evse_manager-SessionStarted>`)
|    data for SessionStarted event
|    **There is an extended definition for this object** :ref:`here <evse_manager-SessionStarted>`.
|   **session_finished**:*object* (:ref:`evse_manager-SessionFinished <evse_manager-SessionFinished>`)
|    data for SessionFinished event that happens when car is plugged out
|    **There is an extended definition for this object** :ref:`here <evse_manager-SessionFinished>`.
|   **session_cancelled**:*object* (:ref:`evse_manager-SessionCancelled <evse_manager-SessionCancelled>`)
|    data for SessionCancelled event that happens when e.g. user cancels charging before plug out. Note that SessionFinished will always be generated on plugout.
|    **There is an extended definition for this object** :ref:`here <evse_manager-SessionCancelled>`.
|   **error**:*string* (:ref:`evse_manager-Error <evse_manager-Error>`)
|    Details on error type
|    **There is an extended definition for this object** :ref:`here <evse_manager-Error>`.
|   **reservation_start**:*object* (:ref:`evse_manager-ReservationStart <evse_manager-ReservationStart>`)
|    Details on Reservation Start
|    **There is an extended definition for this object** :ref:`here <evse_manager-ReservationStart>`.
|   **reservation_end**:*object* (:ref:`evse_manager-ReservationEnd <evse_manager-ReservationEnd>`)
|    Details on Reservation End
|    **There is an extended definition for this object** :ref:`here <evse_manager-ReservationEnd>`.
