
.. _everest_modules_PhyVersoBSP:

###########
PhyVersoBSP
###########
| Driver module for Phytec PhyVerso EV Charging controller with Pionix MCU firmware


For a detailed handwritten documentation see :ref:`here <everest_modules_handwritten_PhyVersoBSP>`

********************
Module Configuration
********************
| **serial_port**:*string* <optional>
| *default: "/dev/ttyUSB0"*
|  Serial port the hardware is connected to
| **baud_rate**:*integer* <optional>
| *default: 115200*
|  Serial baud rate to use when communicating with the hardware
| **reset_gpio**:*integer* <optional>
| *default: -1*
|  Reset GPIO number to use to HW reset Yeti. If set <0 it is disabled.
| **mcu_config_file**:*string* <optional>
| *default: "example_config_pionix.json"*
|  config file that should be sent to the MCU
| **conn1_max_current_A_import**:*integer* <optional>
| *default: 16*
|  Maximum import current in amps
| **conn1_min_current_A_import**:*integer* <optional>
| *default: 6*
|  Minimum import current in amps
| **conn1_min_phase_count_import**:*integer* <optional>
| *default: 3*
|  Minimum phase count for import
| **conn1_max_phase_count_import**:*integer* <optional>
| *default: 3*
|  Maximum phase count for import
| **conn1_min_current_A_export**:*integer* <optional>
| *default: 0*
|  Minimum export current in amps
| **conn1_max_current_A_export**:*integer* <optional>
| *default: 0*
|  Maximum export current in amps
| **conn1_min_phase_count_export**:*integer* <optional>
| *default: 3*
|  Minimum phase count for export
| **conn1_max_phase_count_export**:*integer* <optional>
| *default: 3*
|  Maximum phase count for export
| **conn1_has_socket**:*boolean* <optional>
| *default: False*
|  Set to true if it has a socket, false if it has a permanently attached cable
| **conn1_dc**:*boolean* <optional>
| *default: False*
|  Set to true if it is for DC, false if it is AC
| **conn2_max_current_A_import**:*integer* <optional>
| *default: 16*
|  Maximum import current in amps
| **conn2_min_current_A_import**:*integer* <optional>
| *default: 6*
|  Minimum import current in amps
| **conn2_min_phase_count_import**:*integer* <optional>
| *default: 3*
|  Minimum phase count for import
| **conn2_max_phase_count_import**:*integer* <optional>
| *default: 3*
|  Maximum phase count for import
| **conn2_min_current_A_export**:*integer* <optional>
| *default: 0*
|  Minimum export current in amps
| **conn2_max_current_A_export**:*integer* <optional>
| *default: 0*
|  Maximum export current in amps
| **conn2_min_phase_count_export**:*integer* <optional>
| *default: 3*
|  Minimum phase count for export
| **conn2_max_phase_count_export**:*integer* <optional>
| *default: 3*
|  Maximum phase count for export
| **conn2_has_socket**:*boolean* <optional>
| *default: False*
|  Set to true if it has a socket, false if it has a permanently attached cable
| **conn2_dc**:*boolean* <optional>
| *default: False*
|  Set to true if it is for DC, false if it is AC

********
Provides
********
| **connector_1**::ref:`evse_board_support <everest_interfaces_evse_board_support>`
|  provides the board support interface to low level control the proximity and control pilots, relais and motor lock
| **connector_2**::ref:`evse_board_support <everest_interfaces_evse_board_support>`
|  provides the board support interface to low level control the proximity and control pilots, relais and motor lock
| **rcd_1**::ref:`ac_rcd <everest_interfaces_ac_rcd>`
|  RCD interface of the onboard RCD
| **rcd_2**::ref:`ac_rcd <everest_interfaces_ac_rcd>`
|  RCD interface of the onboard RCD
| **connector_lock_1**::ref:`connector_lock <everest_interfaces_connector_lock>`
|  Lock interface
| **connector_lock_2**::ref:`connector_lock <everest_interfaces_connector_lock>`
|  Lock interface


********
Metadata
********
Authors
=======
| Cornelius Claussen

License
=======
| https://opensource.org/licenses/Apache-2.0

